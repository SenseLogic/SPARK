// -- FUNCTIONS

function GetCharacterCount(
    string text
    )
{
    return strlen( text );
}

// ~~

function GetHexadecimalText(
    int integer
    )
{
    return base_convert( integer, 10, 16 );
}

// ~~

function GetHexatridecimalText(
    int integer
    )
{
    return base_convert( integer, 10, 36 );
}

// ~~

function GetQuotedText(
    string text
    )
{
    return addslashes( text );
}

// ~~

function HasPrefix(
    string text,
    string prefix
    )
{
    var text_character_count = strlen( text );
    var prefix_character_count = strlen( prefix );

    return
        text_character_count >= prefix_character_count
        && strncmp( text, prefix, prefix_character_count ) === 0;
}

// ~~

function RemovePrefix(
    string text,
    string prefix
    )
{
    var text_character_count = strlen( text );
    var prefix_character_count = strlen( prefix );

    if ( text_character_count >= prefix_character_count
         && strncmp( text, prefix, prefix_character_count ) === 0 )
    {
        return substr( text, prefix_character_count );
    }
    else
    {
        return text;
    }
}

// ~~

function HasSuffix(
    string text,
    string suffix
    )
{
    var text_character_count = strlen( text );
    var suffix_character_count = strlen( suffix );

    return
        text_character_count >= suffix_character_count
        && substr_compare( text, suffix, text_character_count - suffix_character_count, suffix_character_count ) === 0;
}

// ~~

function RemoveSuffix(
    string text,
    string suffix
    )
{
    var text_character_count = strlen( text );
    var suffix_character_count = strlen( suffix );

    if ( text_character_count >= suffix_character_count
         && substr_compare( text, suffix, text_character_count - suffix_character_count, suffix_character_count ) === 0 )
    {
        return substr( text, 0, text_character_count - suffix_character_count );
    }
    else
    {
        return text;
    }
}

// ~~

function GetLowerCaseText(
    string text
    )
{
    return strtolower( text );
}

// ~~

function GetUpperCaseText(
    string text
    )
{
    return strtoupper( text );
}

// ~~

function GetCapitalCaseText(
    string text
    )
{
    if ( count( text ) <= 1 )
    {
        return strtoupper( text );
    }
    else
    {
        return strtoupper( text[ 0 ] ) .. strtolower( substr( text, 1 ) );
    }
}

// ~~

function GetTitleCaseText(
    string text,
    bool prior_character_is_letter = false,
    bool separator_characters_are_kept = true
    )
{
    var title_case_text = "";

    foreach ( var character; mb_str_split( text ) )
    {
        var lower_case_character = strtolower( character );
        var upper_case_character = strtoupper( character );

        if ( lower_case_character !== upper_case_character )
        {
            if ( prior_character_is_letter )
            {
                title_case_text ..= lower_case_character;
            }
            else
            {
                title_case_text ..= upper_case_character;
            }

            prior_character_is_letter = true;
        }
        else
        {
            if ( ( character >= '0'
                   && character <= '9' )
                 || separator_characters_are_kept )
            {
                title_case_text ..= character;
            }

            prior_character_is_letter = false;
        }
    }

    return title_case_text;
}

// ~~

function GetPascalCaseText(
    string text,
    bool prior_character_is_letter = false
    )
{
    return GetTitleCaseText( text, false, false );
}

// ~~

function GetCamelCaseText(
    string text
    )
{
    return GetTitleCaseText( text, true, false );
}

// ~~

function GetSnakeCaseText(
    string text,
    string separator_character = "_"
    )
{
    var snake_case_text = "";
    var prior_character_is_digit = false;
    var prior_character_is_lower_case_letter = false;

    foreach ( var character; mb_str_split( text ) )
    {
        if ( character >= '0'
             && character <= '9' )
        {
            if ( !prior_character_is_digit )
            {
                snake_case_text ..= separator_character;
            }

            prior_character_is_digit = true;
        }
        else
        {
            var lower_case_character = strtolower( character );
            var upper_case_character = strtoupper( character );

            if ( lower_case_character !== upper_case_character )
            {
                if ( character === lower_case_character )
                {
                    var prior_character_is_lower_case_letter = true;
                }
                else if ( character === upper_case_character )
                {
                    if ( prior_character_is_lower_case_letter
                         || prior_character_is_digit )
                    {
                        snake_case_text ..= separator_character;
                    }

                    prior_character_is_lower_case_letter = false;
                }

                character = lower_case_character;
            }
            else
            {
                character = "";
                prior_character_is_lower_case_letter = true;
            }

            prior_character_is_digit = false;
        }

        snake_case_text ..= character;
    }

    return snake_case_text;
}

// ~~

function GetKebabCaseText(
    string text
    )
{
    return GetSnakeCaseText( text, '-' );
}


// ~~

function GetShortenedText(
    string text,
    int maximum_character_count,
    string separator = '...'
    )
{
    var text_character_count = strlen( text );

    if ( text_character_count <= maximum_character_count )
    {
        return text;
    }
    else
    {
        var separator_character_count = strlen( separator );
        var first_character_count = ( int )( ( maximum_character_count - separator_character_count ) / 2 );
        var last_character_count = maximum_character_count - first_character_count - separator_character_count;

        return
            substr( text, 0, first_character_count )
            .. separator
            .. substr( text, text_character_count - last_character_count, last_character_count );
    }
}

// ~~

function GetIncrementedText(
    string prefix = '',
    string suffix = ''
    )
{
    static local
        counter = 0;

    ++counter;

    return prefix .. counter .. suffix;
}

// ~~

function GetBareText(
    string text
    )
{
    return
        str_replace(
            [
                '[nbsp]',
                '[br]',
                '[div]',
                '[div[',
                '[/div]',
                '[span]',
                '[span[',
                '[/span]',
                '[p]',
                '[p[',
                '[/p]',
                '[ul]',
                '[ul[',
                '[/ul]',
                '[li]',
                '[li[',
                '[/li]',
                '[a[',
                '[/a]',
                '[color[',
                '[/color]',
                ']]',
                '[b]',
                '[/b]',
                '[i]',
                '[/i]'
            ],
            '',
            text
            );
}

// ~~

function GetProcessedText(
    string text
    )
{
    return
        str_replace(
            [
                '&',
                '<',
                '>',
                '[nbsp]',
                '[br]',
                '[div]',
                '[div[',
                '[/div]',
                '[span]',
                '[span[',
                '[/span]',
                '[p]',
                '[p[',
                '[/p]',
                '[ul]',
                '[ul[',
                '[/ul]',
                '[li]',
                '[li[',
                '[/li]',
                '[a[',
                '[/a]',
                '[color[',
                '[/color]',
                ']]',
                '[b]',
                '[/b]',
                '[i]',
                '[/i]'
            ],
            [
                '&amp;',
                '&lt;',
                '&gt;',
                '&nbsp;',
                '<br/>',
                '<div>',
                '<div class="',
                '</div>',
                '<span>',
                '<span class="',
                '</span>',
                '<p>',
                '<p class="',
                '</p>',
                '<ul>',
                '<ul class="',
                '</ul>',
                '<li>',
                '<li class="',
                '</li>',
                '<a href="',
                '</a>',
                '<span class="text-color-',
                '</span>',
                '">',
                '<b>',
                '</b>',
                '<i>',
                '</i>'
            ],
            text
            );
}
