// -- FUNCTIONS

function GetCharacterCount(
    string text
    )
{
    return strlen( text );
}

// ~~

function GetHexadecimalText(
    int integer
    )
{
    return base_convert( integer, 10, 16 );
}

// ~~

function GetHexatridecimalText(
    int integer
    )
{
    return base_convert( integer, 10, 36 );
}

// ~~

function HasPrefix(
    string text,
    string prefix
    )
{
    var text_character_count = strlen( text );
    var prefix_character_count = strlen( prefix );

    return
        text_character_count >= prefix_character_count
        && strncmp( text, prefix, prefix_character_count ) === 0;
}

// ~~

function RemovePrefix(
    string text,
    string prefix
    )
{
    var text_character_count = strlen( text );
    var prefix_character_count = strlen( prefix );

    if ( text_character_count >= prefix_character_count
         && strncmp( text, prefix, prefix_character_count ) === 0 )
    {
        return substr( text, prefix_character_count );
    }
    else
    {
        return text;
    }
}

// ~~

function HasSuffix(
    string text,
    string suffix
    )
{
    var text_character_count = strlen( text );
    var suffix_character_count = strlen( suffix );

    return
        text_character_count >= suffix_character_count
        && substr_compare( text, suffix, text_character_count - suffix_character_count, suffix_character_count ) === 0;
}

// ~~

function RemoveSuffix(
    string text,
    string suffix
    )
{
    var text_character_count = strlen( text );
    var suffix_character_count = strlen( suffix );

    if ( text_character_count >= suffix_character_count
         && substr_compare( text, suffix, text_character_count - suffix_character_count, suffix_character_count ) === 0 )
    {
        return substr( text, 0, text_character_count - suffix_character_count );
    }
    else
    {
        return text;
    }
}

// ~~

function GetShortenedText(
    string text,
    int maximum_character_count,
    string separator = '...'
    )
{
    var text_character_count = strlen( text );

    if ( text_character_count <= maximum_character_count )
    {
        return text;
    }
    else
    {
        var separator_character_count = strlen( separator );
        var first_character_count = ( int )( ( maximum_character_count - separator_character_count ) / 2 );
        var last_character_count = maximum_character_count - first_character_count - separator_character_count;

        return
            substr( text, 0, first_character_count )
            .. separator
            .. substr( text, text_character_count - last_character_count, last_character_count );
    }
}

// ~~

function GetIncrementedText(
    string prefix = '',
    string suffix = ''
    )
{
    static local
        counter = 0;
        
    ++counter;
    
    return prefix .. counter .. suffix;
}
