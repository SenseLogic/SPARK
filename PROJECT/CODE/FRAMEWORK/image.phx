// -- FUNCTIONS

function DrawLine(
    image,
    float first_column,
    float first_row,
    float last_column,
    float last_row,
    float color_red,
    float color_green,
    float color_blue
    )
{
    imageline(
        image,
        first_column,
        first_row,
        last_column,
        last_row,
        imagecolorallocate( image, color_red, color_green, color_blue )
        );
}

// ~~

function DrawRectangle(
    image,
    float first_column,
    float first_row,
    float last_column,
    float last_row,
    float color_red,
    float color_green,
    float color_blue
    )
{
    imagerectangle(
        image,
        first_column,
        first_row,
        last_column,
        last_row,
        imagecolorallocate( image, color_red, color_green, color_blue )
        );
}

// ~~

function DrawFilledRectangle(
    image,
    float first_column,
    float first_row,
    float last_column,
    float last_row,
    float color_red,
    float color_green,
    float color_blue
    )
{
    imagefilledrectangle(
        image,
        first_column,
        first_row,
        last_column,
        last_row,
        imagecolorallocate( image, color_red, color_green, color_blue )
        );
}

// ~~

function DrawStretchedImage(
    target_image,
    float target_column,
    float target_row,
    float target_width,
    float target_height,
    source_image,
    float source_column,
    float source_row,
    float source_width,
    float source_height
    )
{
    imagecopyresized(
        target_image,
        source_image,
        target_column,
        target_row,
        source_column,
        source_row,
        target_width,
        target_height,
        source_width,
        source_height
        );
}

// ~~

function DrawCoveredImage(
    target_image,
    float target_column,
    float target_row,
    float target_width,
    float target_height,
    source_image,
    float source_column,
    float source_row,
    float source_width,
    float source_height
    )
{
    var cropped_source_column = 0;
    var cropped_source_row = 0;
    var cropped_source_width = source_width;
    var cropped_source_height = source_height;
    var source_aspect_ratio = source_width / source_height;
    var target_aspect_ratio = target_width / target_height;

    if ( source_aspect_ratio > target_aspect_ratio )
    {
        cropped_source_width = floor( source_height * target_aspect_ratio );
        cropped_source_column = floor( ( source_width - cropped_source_width ) * 0.5 );
    }
    else if ( source_aspect_ratio < target_aspect_ratio )
    {
        cropped_source_height = floor( source_width / target_aspect_ratio );
        cropped_source_row = floor( ( source_height - cropped_source_height ) * 0.5 );
    }

    imagecopyresized(
        target_image,
        source_image,
        target_column,
        target_row,
        source_column + cropped_source_column,
        source_row + cropped_source_row,
        target_width,
        target_height,
        cropped_source_width,
        cropped_source_height
        );
}

// ~~

function DrawText(
    image,
    float column,
    float row,
    float angle,
    string text,
    string font_path,
    string font_size,
    float color_red,
    float color_green,
    float color_blue
    )
{
    return
        imagettftext(
            image,
            font_size,
            angle,
            column,
            row,
            imagecolorallocate( image, color_red, color_green, color_blue ),
            font_path,
            text
            );
}

// ~~

function DrawJustifiedText(
    image,
    float canvas_column,
    float canvas_row,
    float canvas_width,
    float canvas_height,
    string text,
    bool text_has_tags = true,
    string font_path,
    string bold_font_path,
    string italic_font_path,
    string bold_italic_font_path,
    string font_size,
    float color_red,
    float color_green,
    float color_blue,
    int word_alignment = -1,
    int column_alignment = -1,
    int row_alignment = -1,
    float line_height_factor = 1.5,
    float line_spacing_factor = 1,
    float space_width_factor = 0.8
    )
{
    if ( text_has_tags )
    {
        text
            = str_replace(
                  [ '<', '>' ],
                  [ ' <', '> ' ],
                  preg_replace( '/<([^>]*) +([^>]*)>/', '<$1Â¨$2>', text )
                  );
    }

    var box = new stdClass();
    var box.Column = 0;
    var box.Row = 0;
    var box.Width = 0;
    var box.Height = 0;

    var letter_bounding_box = imagettfbbox( font_size, 0, font_path, '-' );
    var space_width = letter_bounding_box[ 2 ] * space_width_factor;

    var letter_bounding_box = imagettfbbox( font_size, 0, font_path, 'AMWbdfhkltjgpqy' );
    var letter_height = ( letter_bounding_box[ 1 ] - letter_bounding_box[ 7 ] );
    var top_height = -letter_bounding_box[ 7 ];
    var bottom_height = letter_bounding_box[ 1 ];
    var line_height = letter_height * line_height_factor;

    var line_index = 0;
    var line_width_array = array();
    line_width_array[ line_index ] = 0;

    var word_column = 0;
    var word_row = 0;
    var word_text_array = explode( ' ', text );
    var word_count = 0;
    var word_array = array();
    var word_is_bold = false;
    var word_is_italic = false;

    foreach ( var word_text; word_text_array )
    {
        if ( text_has_tags
             && word_text === '<b>' )
        {
            word_is_bold = true;
        }
        else if ( text_has_tags
                  && word_text === '</b>' )
        {
            word_is_bold = false;
        }
        else if ( text_has_tags
                  && word_text === '<i>' )
        {
            word_is_italic = true;
        }
        else if ( text_has_tags
                  && word_text === '</i>' )
        {
            word_is_italic = false;
        }
        else if ( text_has_tags
                  && ( word_text === '<br>'
                       || word_text === '<br/>' ) )
        {
            ++line_index;
            line_width_array[ line_index ] = 0;

            word_column = 0;
            word_row += line_height;

            box.Height = word_row + letter_height;
        }
        else if ( !text_has_tags
                  || word_text !== '' )
        {
            var word = new stdClass();
            word.Text = word_text;
            word.ColorRed = color_red;
            word.ColorGreen = color_green;
            word.ColorBlue = color_blue;
            word.FontSize = font_size;

            if ( word_is_bold )
            {
                if ( word_is_italic )
                {
                    word.FontPath = bold_italic_font_path;
                }
                else
                {
                    word.FontPath = bold_font_path;
                }
            }
            else
            {
                if ( word_is_italic )
                {
                    word.FontPath = italic_font_path;
                }
                else
                {
                    word.FontPath = font_path;
                }
            }

            var word_bounding_box = imagettfbbox( word.FontSize, 0, word.FontPath, word.Text );
            word.Width = word_bounding_box[ 2 ];
            word.Height = word_bounding_box[ 1 ];

            if ( word_column + word.Width > canvas_width )
            {
                ++line_index;
                line_width_array[ line_index ] = 0;

                word_column = 0;
                word_row += line_height;
            }

            if ( word_row + word.Height <= canvas_height )
            {
                var box_height = word_row + letter_height;

                if ( box_height > box.Height )
                {
                    box.Height = box_height;
                }

                var line_width = word_column + word.Width;
                line_width_array[ line_index ] = line_width;

                if ( line_width > box.Width )
                {
                    box.Width = line_width;
                }

                word.Column = word_column;
                word.Row = word_row;
                word.LineIndex = line_index;

                word_array[ word_count ] = word;
                ++word_count;

                word_column += word.Width + space_width;
            }
        }
    }

    if ( column_alignment < 0 )
    {
        box.Column = canvas_column;
    }
    else if ( column_alignment > 0 )
    {
        box.Column = canvas_column + canvas_width - box.Width;
    }
    else
    {
        box.Column = canvas_column + ( canvas_width - box.Width ) * 0.5;
    }

    if ( row_alignment < 0 )
    {
        box.Row = canvas_row;
    }
    else if ( row_alignment > 0 )
    {
        box.Row = canvas_row + canvas_height - box.Height;
    }
    else
    {
        box.Row = canvas_row + ( canvas_height - box.Height ) * 0.5;
    }

    foreach ( word; word_array )
    {
        if ( word.Text !== '' )
        {
            word_column = box.Column + word.Column;
            word_row = box.Row + word.Row;

            if ( word_alignment === 0 )
            {
                word_column += ( box.Width - line_width_array[ word.LineIndex ] ) * 0.5;
            }
            else if ( word_alignment > 0 )
            {
                word_column += box.Width - line_width_array[ word.LineIndex ];
            }

            imagettftext(
                image,
                word.FontSize,
                0,
                word_column,
                word_row + top_height,
                imagecolorallocate( image, word.ColorRed, word.ColorGreen, word.ColorBlue ),
                word.FontPath,
                word.Text
                );
        }
    }

    box.LastColumn = box.Column + box.Width - 1;
    box.LastRow = box.Row + box.Height - 1;

    return box;
}
