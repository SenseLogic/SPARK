// -- FUNCTIONS

function GetSqlColumnText(
    column_value
    )
{
    return
        '"'
        .. str_replace( [ "\\", "\n", "\r", "\t", "\"", "\'" ], [ "\\\\", "\\n", "\\r", "\\t", "\\\"", "\\'" ], column_value )
        .. '"';
}

// ~~

function GetSqlTableText(
    string table_name
    )
{
    var statement = GetDatabaseStatement( 'select * from `' .. table_name .. '`' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var sql_row_text_array = [];

    while ( var column_array = statement.fetch( PDO::FETCH_ASSOC ) )
    {
        var column_name_array = array_keys( column_array );
        var column_value_array = array_values( column_array );
        var column_value_count = count( column_value_array );

        var sql_row_text
            = 'replace into `' .. DatabaseName .. '`.`' .. table_name .. "`\n"
              .. "    (\n"
              .. "        `" .. implode( '`, `', column_name_array ) .. "`\n"
              .. "    )\n"
              .. "    values\n"
              .. "    (\n";

        for ( var column_value_index = 0;
              column_value_index < column_value_count;
              ++column_value_index )
        {
            sql_row_text
                ..= '        ' .. GetSqlColumnText( column_value_array[ column_value_index ] );

            if ( column_value_index + 1 < column_value_count )
            {
                sql_row_text ..= ",\n";
            }
            else
            {
                sql_row_text ..= "\n";
            }
        }

        sql_row_text ..= "    );\n";

        array_push( sql_row_text_array, sql_row_text );
    }

    sort( sql_row_text_array );

    return implode( "\n", sql_row_text_array );
}

// ~~

function GetSqlDatabaseText(
    array table_name_array
    )
{
    var sql_database_text = '';

    foreach ( var table_name; table_name_array )
    {
        sql_database_text
            ..= GetSqlTableText( table_name ) .. "\n";
    }

    return sql_database_text;
}

// ~~

function GetSqlCommandArray(
    string text
    )
{
    return explode( ";\n", preg_replace( "/;\s*\n/", ";\n", str_replace( "\r", "", text ) ) .. "\n" );
}
